/**
 * 
 */
package com.scotmatson.banking;

import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;

public class ATM implements Scannable<Card> {
	
	private Bank bank;
	private int maxWithdrawal; // Although - never runs out of cash.
	private Card card;
	
	public ATM (Bank bank, int maxWithdrawal)
	{
		this.bank = bank;
		this.maxWithdrawal = maxWithdrawal;
	}
	
	/**
	 * 
	 */
	@Override
	public void scan(Card card) {
		this.card = card;
		System.out.println("Scanned");
	}	
	
	/**
	 * 
	 */
	public boolean validateCard()
	{
		boolean isValid = false;
		
		// Validate card expiration date.
		Calendar calendar = Calendar.getInstance();
		Date now = calendar.getTime();
				
		if (now.before(card.getExpiration()))
		{	
			// Validate Bank Affiliation.
			int bankid = card.getNumber() / 10000;
			System.out.println("Bank id: " + bank.getID());
			System.out.println("Bank id: " + bankid);
			System.out.println("card id: " + card.getNumber());
			if (bank.getID() == bankid)
			{
				isValid = true;
			}
		}
		System.out.println(isValid);
		return isValid;
	}
	
	/**
	 * 
	 */
	public void beginTransaction() 
	{
		
	}
	
	/**
	 * 
	 */
	public void endTransaction()
	{
		
	}
	
	/**
	 * 
	 */
	public void makeDeposit()
	{
		
	}
	
	/**
	 * 
	 */
	public void makeWithdrawal()
	{
		
	}
		// Should this application start in a Tester class instead?
		// Since this simulations an ATM, we assume the information must already exist.
		// The ATM is enforcing the rules
		// The bank set the rules for the ATM to follow
		// The card is the key to use the ATM
		
		// Menu
			// Choose from 2 banks
			// 4 ATM
			// Different customers?
			
		
		// May need Error Codes
			// Error types
			//
			// Expired Card
			// Invalid Input
			// Invalid amount
			// Invalid card number
		
		// Customers may open accounts in bank a, bank b, or both
}
